{
  "version": 3,
  "sources": ["../../node_modules/.pnpm/@messageformat+runtime@3.0.1/node_modules/@messageformat/runtime/esm/fmt/duration.js"],
  "sourcesContent": ["/**\n * Represent a duration in seconds as a string\n *\n * @param value A finite number, or its string representation\n * @return Includes one or two `:` separators, and matches the pattern\n *   `hhhh:mm:ss`, possibly with a leading `-` for negative values and a\n *   trailing `.sss` part for non-integer input\n *\n * @example\n * ```js\n * var mf = new MessageFormat();\n *\n * mf.compile('It has been {D, duration}')({ D: 123 })\n * // 'It has been 2:03'\n *\n * mf.compile('Countdown: {D, duration}')({ D: -151200.42 })\n * // 'Countdown: -42:00:00.420'\n * ```\n */\nexport function duration(value) {\n    if (typeof value !== 'number')\n        value = Number(value);\n    if (!isFinite(value))\n        return String(value);\n    var sign = '';\n    if (value < 0) {\n        sign = '-';\n        value = Math.abs(value);\n    }\n    else {\n        value = Number(value);\n    }\n    var sec = value % 60;\n    var parts = [Math.round(sec) === sec ? sec : sec.toFixed(3)];\n    if (value < 60) {\n        parts.unshift(0); // at least one : is required\n    }\n    else {\n        value = Math.round((value - Number(parts[0])) / 60);\n        parts.unshift(value % 60); // minutes\n        if (value >= 60) {\n            value = Math.round((value - Number(parts[0])) / 60);\n            parts.unshift(value); // hours\n        }\n    }\n    var first = parts.shift();\n    return (sign +\n        first +\n        ':' +\n        parts.map(function (n) { return (n < 10 ? '0' + String(n) : String(n)); }).join(':'));\n}\n"],
  "mappings": "AAmBO,SAASA,EAASC,EAAO,CAG5B,GAFI,OAAOA,GAAU,WACjBA,EAAQ,OAAOA,CAAK,GACpB,CAAC,SAASA,CAAK,EACf,OAAO,OAAOA,CAAK,EACvB,IAAIC,EAAO,GACPD,EAAQ,GACRC,EAAO,IACPD,EAAQ,KAAK,IAAIA,CAAK,GAGtBA,EAAQ,OAAOA,CAAK,EAExB,IAAIE,EAAMF,EAAQ,GACdG,EAAQ,CAAC,KAAK,MAAMD,CAAG,IAAMA,EAAMA,EAAMA,EAAI,QAAQ,CAAC,CAAC,EACvDF,EAAQ,GACRG,EAAM,QAAQ,CAAC,GAGfH,EAAQ,KAAK,OAAOA,EAAQ,OAAOG,EAAM,EAAE,GAAK,EAAE,EAClDA,EAAM,QAAQH,EAAQ,EAAE,EACpBA,GAAS,KACTA,EAAQ,KAAK,OAAOA,EAAQ,OAAOG,EAAM,EAAE,GAAK,EAAE,EAClDA,EAAM,QAAQH,CAAK,IAG3B,IAAII,EAAQD,EAAM,MAAM,EACxB,OAAQF,EACJG,EACA,IACAD,EAAM,IAAI,SAAUE,EAAG,CAAE,OAAQA,EAAI,GAAK,IAAM,OAAOA,CAAC,EAAI,OAAOA,CAAC,CAAI,CAAC,EAAE,KAAK,GAAG,CAC3F",
  "names": ["duration", "value", "sign", "sec", "parts", "first", "n"]
}
