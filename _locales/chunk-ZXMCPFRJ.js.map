{
  "version": 3,
  "sources": ["../../node_modules/.pnpm/@messageformat+runtime@3.0.1/node_modules/@messageformat/runtime/esm/runtime.js", "../../node_modules/.pnpm/make-plural@7.1.0/node_modules/make-plural/cardinals.mjs"],
  "sourcesContent": ["/**\n * A set of utility functions that are called by the compiled Javascript\n * functions, these are included locally in the output of {@link MessageFormat.compile compile()}.\n */\n/** @private */\nexport function _nf(lc) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    return _nf[lc] || (_nf[lc] = new Intl.NumberFormat(lc));\n}\n/**\n * Utility function for `#` in plural rules\n *\n * @param lc The current locale\n * @param value The value to operate on\n * @param offset An offset, set by the surrounding context\n * @returns The result of applying the offset to the input value\n */\nexport function number(lc, value, offset) {\n    return _nf(lc).format(value - offset);\n}\n/**\n * Strict utility function for `#` in plural rules\n *\n * Will throw an Error if `value` or `offset` are non-numeric.\n *\n * @param lc The current locale\n * @param value The value to operate on\n * @param offset An offset, set by the surrounding context\n * @param name The name of the argument, used for error reporting\n * @returns The result of applying the offset to the input value\n */\nexport function strictNumber(lc, value, offset, name) {\n    var n = value - offset;\n    if (isNaN(n))\n        throw new Error('`' + name + '` or its offset is not a number');\n    return _nf(lc).format(n);\n}\n/**\n * Utility function for `{N, plural|selectordinal, ...}`\n *\n * @param value The key to use to find a pluralization rule\n * @param offset An offset to apply to `value`\n * @param lcfunc A locale function from `pluralFuncs`\n * @param data The object from which results are looked up\n * @param isOrdinal If true, use ordinal rather than cardinal rules\n * @returns The result of the pluralization\n */\nexport function plural(value, offset, lcfunc, data, isOrdinal) {\n    if ({}.hasOwnProperty.call(data, value))\n        return data[value];\n    if (offset)\n        value -= offset;\n    var key = lcfunc(value, isOrdinal);\n    return key in data ? data[key] : data.other;\n}\n/**\n * Utility function for `{N, select, ...}`\n *\n * @param value The key to use to find a selection\n * @param data The object from which results are looked up\n * @returns The result of the select statement\n */\nexport function select(value, data) {\n    return {}.hasOwnProperty.call(data, value) ? data[value] : data.other;\n}\n/**\n * Checks that all required arguments are set to defined values\n *\n * Throws on failure; otherwise returns undefined\n *\n * @param keys The required keys\n * @param data The data object being checked\n */\nexport function reqArgs(keys, data) {\n    for (var i = 0; i < keys.length; ++i)\n        if (!data || data[keys[i]] === undefined)\n            throw new Error(\"Message requires argument '\".concat(keys[i], \"'\"));\n}\n", "const a = (n) => n == 1 ? 'one' : 'other';\nconst b = (n) => (n == 0 || n == 1) ? 'one' : 'other';\nconst c = (n) => n >= 0 && n <= 1 ? 'one' : 'other';\nconst d = (n) => {\n  const s = String(n).split('.'), v0 = !s[1];\n  return n == 1 && v0 ? 'one' : 'other';\n};\nconst e = (n) => 'other';\nconst f = (n) => n == 1 ? 'one'\n    : n == 2 ? 'two'\n    : 'other';\n\nexport const af = a;\nexport const ak = b;\nexport const am = c;\nexport const an = a;\nexport const ar = (n) => {\n  const s = String(n).split('.'), t0 = Number(s[0]) == n, n100 = t0 && s[0].slice(-2);\n  return n == 0 ? 'zero'\n    : n == 1 ? 'one'\n    : n == 2 ? 'two'\n    : (n100 >= 3 && n100 <= 10) ? 'few'\n    : (n100 >= 11 && n100 <= 99) ? 'many'\n    : 'other';\n};\nexport const ars = (n) => {\n  const s = String(n).split('.'), t0 = Number(s[0]) == n, n100 = t0 && s[0].slice(-2);\n  return n == 0 ? 'zero'\n    : n == 1 ? 'one'\n    : n == 2 ? 'two'\n    : (n100 >= 3 && n100 <= 10) ? 'few'\n    : (n100 >= 11 && n100 <= 99) ? 'many'\n    : 'other';\n};\nexport const as = c;\nexport const asa = a;\nexport const ast = d;\nexport const az = a;\nexport const bal = a;\nexport const be = (n) => {\n  const s = String(n).split('.'), t0 = Number(s[0]) == n, n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2);\n  return n10 == 1 && n100 != 11 ? 'one'\n    : (n10 >= 2 && n10 <= 4) && (n100 < 12 || n100 > 14) ? 'few'\n    : t0 && n10 == 0 || (n10 >= 5 && n10 <= 9) || (n100 >= 11 && n100 <= 14) ? 'many'\n    : 'other';\n};\nexport const bem = a;\nexport const bez = a;\nexport const bg = a;\nexport const bho = b;\nexport const bm = e;\nexport const bn = c;\nexport const bo = e;\nexport const br = (n) => {\n  const s = String(n).split('.'), t0 = Number(s[0]) == n, n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2), n1000000 = t0 && s[0].slice(-6);\n  return n10 == 1 && n100 != 11 && n100 != 71 && n100 != 91 ? 'one'\n    : n10 == 2 && n100 != 12 && n100 != 72 && n100 != 92 ? 'two'\n    : ((n10 == 3 || n10 == 4) || n10 == 9) && (n100 < 10 || n100 > 19) && (n100 < 70 || n100 > 79) && (n100 < 90 || n100 > 99) ? 'few'\n    : n != 0 && t0 && n1000000 == 0 ? 'many'\n    : 'other';\n};\nexport const brx = a;\nexport const bs = (n) => {\n  const s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1], i10 = i.slice(-1), i100 = i.slice(-2), f10 = f.slice(-1), f100 = f.slice(-2);\n  return v0 && i10 == 1 && i100 != 11 || f10 == 1 && f100 != 11 ? 'one'\n    : v0 && (i10 >= 2 && i10 <= 4) && (i100 < 12 || i100 > 14) || (f10 >= 2 && f10 <= 4) && (f100 < 12 || f100 > 14) ? 'few'\n    : 'other';\n};\nexport const ca = d;\nexport const ce = a;\nexport const ceb = (n) => {\n  const s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1], i10 = i.slice(-1), f10 = f.slice(-1);\n  return v0 && (i == 1 || i == 2 || i == 3) || v0 && i10 != 4 && i10 != 6 && i10 != 9 || !v0 && f10 != 4 && f10 != 6 && f10 != 9 ? 'one' : 'other';\n};\nexport const cgg = a;\nexport const chr = a;\nexport const ckb = a;\nexport const cs = (n) => {\n  const s = String(n).split('.'), i = s[0], v0 = !s[1];\n  return n == 1 && v0 ? 'one'\n    : (i >= 2 && i <= 4) && v0 ? 'few'\n    : !v0 ? 'many'\n    : 'other';\n};\nexport const cy = (n) => n == 0 ? 'zero'\n    : n == 1 ? 'one'\n    : n == 2 ? 'two'\n    : n == 3 ? 'few'\n    : n == 6 ? 'many'\n    : 'other';\nexport const da = (n) => {\n  const s = String(n).split('.'), i = s[0], t0 = Number(s[0]) == n;\n  return n == 1 || !t0 && (i == 0 || i == 1) ? 'one' : 'other';\n};\nexport const de = d;\nexport const doi = c;\nexport const dsb = (n) => {\n  const s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1], i100 = i.slice(-2), f100 = f.slice(-2);\n  return v0 && i100 == 1 || f100 == 1 ? 'one'\n    : v0 && i100 == 2 || f100 == 2 ? 'two'\n    : v0 && (i100 == 3 || i100 == 4) || (f100 == 3 || f100 == 4) ? 'few'\n    : 'other';\n};\nexport const dv = a;\nexport const dz = e;\nexport const ee = a;\nexport const el = a;\nexport const en = d;\nexport const eo = a;\nexport const es = (n) => {\n  const s = String(n).split('.'), i = s[0], v0 = !s[1], i1000000 = i.slice(-6);\n  return n == 1 ? 'one'\n    : i != 0 && i1000000 == 0 && v0 ? 'many'\n    : 'other';\n};\nexport const et = d;\nexport const eu = a;\nexport const fa = c;\nexport const ff = (n) => n >= 0 && n < 2 ? 'one' : 'other';\nexport const fi = d;\nexport const fil = (n) => {\n  const s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1], i10 = i.slice(-1), f10 = f.slice(-1);\n  return v0 && (i == 1 || i == 2 || i == 3) || v0 && i10 != 4 && i10 != 6 && i10 != 9 || !v0 && f10 != 4 && f10 != 6 && f10 != 9 ? 'one' : 'other';\n};\nexport const fo = a;\nexport const fr = (n) => {\n  const s = String(n).split('.'), i = s[0], v0 = !s[1], i1000000 = i.slice(-6);\n  return n >= 0 && n < 2 ? 'one'\n    : i != 0 && i1000000 == 0 && v0 ? 'many'\n    : 'other';\n};\nexport const fur = a;\nexport const fy = d;\nexport const ga = (n) => {\n  const s = String(n).split('.'), t0 = Number(s[0]) == n;\n  return n == 1 ? 'one'\n    : n == 2 ? 'two'\n    : (t0 && n >= 3 && n <= 6) ? 'few'\n    : (t0 && n >= 7 && n <= 10) ? 'many'\n    : 'other';\n};\nexport const gd = (n) => {\n  const s = String(n).split('.'), t0 = Number(s[0]) == n;\n  return (n == 1 || n == 11) ? 'one'\n    : (n == 2 || n == 12) ? 'two'\n    : ((t0 && n >= 3 && n <= 10) || (t0 && n >= 13 && n <= 19)) ? 'few'\n    : 'other';\n};\nexport const gl = d;\nexport const gsw = a;\nexport const gu = c;\nexport const guw = b;\nexport const gv = (n) => {\n  const s = String(n).split('.'), i = s[0], v0 = !s[1], i10 = i.slice(-1), i100 = i.slice(-2);\n  return v0 && i10 == 1 ? 'one'\n    : v0 && i10 == 2 ? 'two'\n    : v0 && (i100 == 0 || i100 == 20 || i100 == 40 || i100 == 60 || i100 == 80) ? 'few'\n    : !v0 ? 'many'\n    : 'other';\n};\nexport const ha = a;\nexport const haw = a;\nexport const he = (n) => {\n  const s = String(n).split('.'), i = s[0], v0 = !s[1], t0 = Number(s[0]) == n, n10 = t0 && s[0].slice(-1);\n  return n == 1 && v0 ? 'one'\n    : i == 2 && v0 ? 'two'\n    : v0 && (n < 0 || n > 10) && t0 && n10 == 0 ? 'many'\n    : 'other';\n};\nexport const hi = c;\nexport const hnj = e;\nexport const hr = (n) => {\n  const s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1], i10 = i.slice(-1), i100 = i.slice(-2), f10 = f.slice(-1), f100 = f.slice(-2);\n  return v0 && i10 == 1 && i100 != 11 || f10 == 1 && f100 != 11 ? 'one'\n    : v0 && (i10 >= 2 && i10 <= 4) && (i100 < 12 || i100 > 14) || (f10 >= 2 && f10 <= 4) && (f100 < 12 || f100 > 14) ? 'few'\n    : 'other';\n};\nexport const hsb = (n) => {\n  const s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1], i100 = i.slice(-2), f100 = f.slice(-2);\n  return v0 && i100 == 1 || f100 == 1 ? 'one'\n    : v0 && i100 == 2 || f100 == 2 ? 'two'\n    : v0 && (i100 == 3 || i100 == 4) || (f100 == 3 || f100 == 4) ? 'few'\n    : 'other';\n};\nexport const hu = a;\nexport const hy = (n) => n >= 0 && n < 2 ? 'one' : 'other';\nexport const ia = d;\nexport const id = e;\nexport const ig = e;\nexport const ii = e;\nexport const io = d;\nexport const is = (n) => {\n  const s = String(n).split('.'), i = s[0], t0 = Number(s[0]) == n, i10 = i.slice(-1), i100 = i.slice(-2);\n  return t0 && i10 == 1 && i100 != 11 || !t0 ? 'one' : 'other';\n};\nexport const it = (n) => {\n  const s = String(n).split('.'), i = s[0], v0 = !s[1], i1000000 = i.slice(-6);\n  return n == 1 && v0 ? 'one'\n    : i != 0 && i1000000 == 0 && v0 ? 'many'\n    : 'other';\n};\nexport const iu = f;\nexport const ja = e;\nexport const jbo = e;\nexport const jgo = a;\nexport const jmc = a;\nexport const jv = e;\nexport const jw = e;\nexport const ka = a;\nexport const kab = (n) => n >= 0 && n < 2 ? 'one' : 'other';\nexport const kaj = a;\nexport const kcg = a;\nexport const kde = e;\nexport const kea = e;\nexport const kk = a;\nexport const kkj = a;\nexport const kl = a;\nexport const km = e;\nexport const kn = c;\nexport const ko = e;\nexport const ks = a;\nexport const ksb = a;\nexport const ksh = (n) => n == 0 ? 'zero'\n    : n == 1 ? 'one'\n    : 'other';\nexport const ku = a;\nexport const kw = (n) => {\n  const s = String(n).split('.'), t0 = Number(s[0]) == n, n100 = t0 && s[0].slice(-2), n1000 = t0 && s[0].slice(-3), n100000 = t0 && s[0].slice(-5), n1000000 = t0 && s[0].slice(-6);\n  return n == 0 ? 'zero'\n    : n == 1 ? 'one'\n    : (n100 == 2 || n100 == 22 || n100 == 42 || n100 == 62 || n100 == 82) || t0 && n1000 == 0 && ((n100000 >= 1000 && n100000 <= 20000) || n100000 == 40000 || n100000 == 60000 || n100000 == 80000) || n != 0 && n1000000 == 100000 ? 'two'\n    : (n100 == 3 || n100 == 23 || n100 == 43 || n100 == 63 || n100 == 83) ? 'few'\n    : n != 1 && (n100 == 1 || n100 == 21 || n100 == 41 || n100 == 61 || n100 == 81) ? 'many'\n    : 'other';\n};\nexport const ky = a;\nexport const lag = (n) => {\n  const s = String(n).split('.'), i = s[0];\n  return n == 0 ? 'zero'\n    : (i == 0 || i == 1) && n != 0 ? 'one'\n    : 'other';\n};\nexport const lb = a;\nexport const lg = a;\nexport const lij = d;\nexport const lkt = e;\nexport const ln = b;\nexport const lo = e;\nexport const lt = (n) => {\n  const s = String(n).split('.'), f = s[1] || '', t0 = Number(s[0]) == n, n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2);\n  return n10 == 1 && (n100 < 11 || n100 > 19) ? 'one'\n    : (n10 >= 2 && n10 <= 9) && (n100 < 11 || n100 > 19) ? 'few'\n    : f != 0 ? 'many'\n    : 'other';\n};\nexport const lv = (n) => {\n  const s = String(n).split('.'), f = s[1] || '', v = f.length, t0 = Number(s[0]) == n, n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2), f100 = f.slice(-2), f10 = f.slice(-1);\n  return t0 && n10 == 0 || (n100 >= 11 && n100 <= 19) || v == 2 && (f100 >= 11 && f100 <= 19) ? 'zero'\n    : n10 == 1 && n100 != 11 || v == 2 && f10 == 1 && f100 != 11 || v != 2 && f10 == 1 ? 'one'\n    : 'other';\n};\nexport const mas = a;\nexport const mg = b;\nexport const mgo = a;\nexport const mk = (n) => {\n  const s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1], i10 = i.slice(-1), i100 = i.slice(-2), f10 = f.slice(-1), f100 = f.slice(-2);\n  return v0 && i10 == 1 && i100 != 11 || f10 == 1 && f100 != 11 ? 'one' : 'other';\n};\nexport const ml = a;\nexport const mn = a;\nexport const mo = (n) => {\n  const s = String(n).split('.'), v0 = !s[1], t0 = Number(s[0]) == n, n100 = t0 && s[0].slice(-2);\n  return n == 1 && v0 ? 'one'\n    : !v0 || n == 0 || (n100 >= 2 && n100 <= 19) ? 'few'\n    : 'other';\n};\nexport const mr = a;\nexport const ms = e;\nexport const mt = (n) => {\n  const s = String(n).split('.'), t0 = Number(s[0]) == n, n100 = t0 && s[0].slice(-2);\n  return n == 1 ? 'one'\n    : n == 0 || (n100 >= 2 && n100 <= 10) ? 'few'\n    : (n100 >= 11 && n100 <= 19) ? 'many'\n    : 'other';\n};\nexport const my = e;\nexport const nah = a;\nexport const naq = f;\nexport const nb = a;\nexport const nd = a;\nexport const ne = a;\nexport const nl = d;\nexport const nn = a;\nexport const nnh = a;\nexport const no = a;\nexport const nqo = e;\nexport const nr = a;\nexport const nso = b;\nexport const ny = a;\nexport const nyn = a;\nexport const om = a;\nexport const or = a;\nexport const os = a;\nexport const osa = e;\nexport const pa = b;\nexport const pap = a;\nexport const pcm = c;\nexport const pl = (n) => {\n  const s = String(n).split('.'), i = s[0], v0 = !s[1], i10 = i.slice(-1), i100 = i.slice(-2);\n  return n == 1 && v0 ? 'one'\n    : v0 && (i10 >= 2 && i10 <= 4) && (i100 < 12 || i100 > 14) ? 'few'\n    : v0 && i != 1 && (i10 == 0 || i10 == 1) || v0 && (i10 >= 5 && i10 <= 9) || v0 && (i100 >= 12 && i100 <= 14) ? 'many'\n    : 'other';\n};\nexport const prg = (n) => {\n  const s = String(n).split('.'), f = s[1] || '', v = f.length, t0 = Number(s[0]) == n, n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2), f100 = f.slice(-2), f10 = f.slice(-1);\n  return t0 && n10 == 0 || (n100 >= 11 && n100 <= 19) || v == 2 && (f100 >= 11 && f100 <= 19) ? 'zero'\n    : n10 == 1 && n100 != 11 || v == 2 && f10 == 1 && f100 != 11 || v != 2 && f10 == 1 ? 'one'\n    : 'other';\n};\nexport const ps = a;\nexport const pt = (n) => {\n  const s = String(n).split('.'), i = s[0], v0 = !s[1], i1000000 = i.slice(-6);\n  return (i == 0 || i == 1) ? 'one'\n    : i != 0 && i1000000 == 0 && v0 ? 'many'\n    : 'other';\n};\nexport const pt_PT = (n) => {\n  const s = String(n).split('.'), i = s[0], v0 = !s[1], i1000000 = i.slice(-6);\n  return n == 1 && v0 ? 'one'\n    : i != 0 && i1000000 == 0 && v0 ? 'many'\n    : 'other';\n};\nexport const rm = a;\nexport const ro = (n) => {\n  const s = String(n).split('.'), v0 = !s[1], t0 = Number(s[0]) == n, n100 = t0 && s[0].slice(-2);\n  return n == 1 && v0 ? 'one'\n    : !v0 || n == 0 || (n100 >= 2 && n100 <= 19) ? 'few'\n    : 'other';\n};\nexport const rof = a;\nexport const ru = (n) => {\n  const s = String(n).split('.'), i = s[0], v0 = !s[1], i10 = i.slice(-1), i100 = i.slice(-2);\n  return v0 && i10 == 1 && i100 != 11 ? 'one'\n    : v0 && (i10 >= 2 && i10 <= 4) && (i100 < 12 || i100 > 14) ? 'few'\n    : v0 && i10 == 0 || v0 && (i10 >= 5 && i10 <= 9) || v0 && (i100 >= 11 && i100 <= 14) ? 'many'\n    : 'other';\n};\nexport const rwk = a;\nexport const sah = e;\nexport const saq = a;\nexport const sat = f;\nexport const sc = d;\nexport const scn = d;\nexport const sd = a;\nexport const sdh = a;\nexport const se = f;\nexport const seh = a;\nexport const ses = e;\nexport const sg = e;\nexport const sh = (n) => {\n  const s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1], i10 = i.slice(-1), i100 = i.slice(-2), f10 = f.slice(-1), f100 = f.slice(-2);\n  return v0 && i10 == 1 && i100 != 11 || f10 == 1 && f100 != 11 ? 'one'\n    : v0 && (i10 >= 2 && i10 <= 4) && (i100 < 12 || i100 > 14) || (f10 >= 2 && f10 <= 4) && (f100 < 12 || f100 > 14) ? 'few'\n    : 'other';\n};\nexport const shi = (n) => {\n  const s = String(n).split('.'), t0 = Number(s[0]) == n;\n  return n >= 0 && n <= 1 ? 'one'\n    : (t0 && n >= 2 && n <= 10) ? 'few'\n    : 'other';\n};\nexport const si = (n) => {\n  const s = String(n).split('.'), i = s[0], f = s[1] || '';\n  return (n == 0 || n == 1) || i == 0 && f == 1 ? 'one' : 'other';\n};\nexport const sk = (n) => {\n  const s = String(n).split('.'), i = s[0], v0 = !s[1];\n  return n == 1 && v0 ? 'one'\n    : (i >= 2 && i <= 4) && v0 ? 'few'\n    : !v0 ? 'many'\n    : 'other';\n};\nexport const sl = (n) => {\n  const s = String(n).split('.'), i = s[0], v0 = !s[1], i100 = i.slice(-2);\n  return v0 && i100 == 1 ? 'one'\n    : v0 && i100 == 2 ? 'two'\n    : v0 && (i100 == 3 || i100 == 4) || !v0 ? 'few'\n    : 'other';\n};\nexport const sma = f;\nexport const smi = f;\nexport const smj = f;\nexport const smn = f;\nexport const sms = f;\nexport const sn = a;\nexport const so = a;\nexport const sq = a;\nexport const sr = (n) => {\n  const s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1], i10 = i.slice(-1), i100 = i.slice(-2), f10 = f.slice(-1), f100 = f.slice(-2);\n  return v0 && i10 == 1 && i100 != 11 || f10 == 1 && f100 != 11 ? 'one'\n    : v0 && (i10 >= 2 && i10 <= 4) && (i100 < 12 || i100 > 14) || (f10 >= 2 && f10 <= 4) && (f100 < 12 || f100 > 14) ? 'few'\n    : 'other';\n};\nexport const ss = a;\nexport const ssy = a;\nexport const st = a;\nexport const su = e;\nexport const sv = d;\nexport const sw = d;\nexport const syr = a;\nexport const ta = a;\nexport const te = a;\nexport const teo = a;\nexport const th = e;\nexport const ti = b;\nexport const tig = a;\nexport const tk = a;\nexport const tl = (n) => {\n  const s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1], i10 = i.slice(-1), f10 = f.slice(-1);\n  return v0 && (i == 1 || i == 2 || i == 3) || v0 && i10 != 4 && i10 != 6 && i10 != 9 || !v0 && f10 != 4 && f10 != 6 && f10 != 9 ? 'one' : 'other';\n};\nexport const tn = a;\nexport const to = e;\nexport const tpi = e;\nexport const tr = a;\nexport const ts = a;\nexport const tzm = (n) => {\n  const s = String(n).split('.'), t0 = Number(s[0]) == n;\n  return (n == 0 || n == 1) || (t0 && n >= 11 && n <= 99) ? 'one' : 'other';\n};\nexport const ug = a;\nexport const uk = (n) => {\n  const s = String(n).split('.'), i = s[0], v0 = !s[1], i10 = i.slice(-1), i100 = i.slice(-2);\n  return v0 && i10 == 1 && i100 != 11 ? 'one'\n    : v0 && (i10 >= 2 && i10 <= 4) && (i100 < 12 || i100 > 14) ? 'few'\n    : v0 && i10 == 0 || v0 && (i10 >= 5 && i10 <= 9) || v0 && (i100 >= 11 && i100 <= 14) ? 'many'\n    : 'other';\n};\nexport const und = e;\nexport const ur = d;\nexport const uz = a;\nexport const ve = a;\nexport const vi = e;\nexport const vo = a;\nexport const vun = a;\nexport const wa = b;\nexport const wae = a;\nexport const wo = e;\nexport const xh = a;\nexport const xog = a;\nexport const yi = d;\nexport const yo = e;\nexport const yue = e;\nexport const zh = e;\nexport const zu = c;\n"],
  "mappings": "AAKO,SAASA,EAAIC,EAAI,CAGpB,OAAOD,EAAIC,KAAQD,EAAIC,GAAM,IAAI,KAAK,aAAaA,CAAE,EACzD,CASO,SAASC,EAAOD,EAAIE,EAAOC,EAAQ,CACtC,OAAOJ,EAAIC,CAAE,EAAE,OAAOE,EAAQC,CAAM,CACxC,CA4BO,SAASC,EAAOC,EAAOC,EAAQC,EAAQC,EAAMC,EAAW,CAC3D,GAAI,CAAC,EAAE,eAAe,KAAKD,EAAMH,CAAK,EAClC,OAAOG,EAAKH,GACZC,IACAD,GAASC,GACb,IAAII,EAAMH,EAAOF,EAAOI,CAAS,EACjC,OAAOC,KAAOF,EAAOA,EAAKE,GAAOF,EAAK,KAC1C,CCpDA,IAAMG,EAAKC,GAAM,CACf,IAAMC,EAAI,OAAOD,CAAC,EAAE,MAAM,GAAG,EAAGE,EAAK,CAACD,EAAE,GACxC,OAAOD,GAAK,GAAKE,EAAK,MAAQ,OAChC,EAqGO,IAAMC,EAAKC",
  "names": ["_nf", "lc", "number", "value", "offset", "plural", "value", "offset", "lcfunc", "data", "isOrdinal", "key", "d", "n", "s", "v0", "en", "d"]
}
